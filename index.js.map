{"version":3,"file":"index.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["import axios from 'axios';\n\nexport function getImagesByQuery(query) {\n    const BASE_URL = 'https://pixabay.com';\n    const END_POINT = '/api/';\n    const API_KEY = '51783155-d60e9242c7f61df87da62484d';\n\n    const params = new URLSearchParams({\n        q: query,\n        key: API_KEY,\n        image_type: 'photo',\n        orientation: 'horizontal',\n        safesearch: 'true',\n    });\n\n    const url = `${BASE_URL}${END_POINT}`;\n\n    return axios\n        .get(url, { params })\n        .then(response => response.data)\n        .catch(error => {\n            console.error('Помилка при отриманні зображень:', error.message);\n            throw error;\n        });\n}","import SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nconst listElem = document.querySelector('.gallery');\nconst loaderElem = document.querySelector('.loader');\n\nlet lightbox;\nexport function createGallery(images) {\n    const markup = images\n        .map(\n            image =>\n                `<a class=\"gallery-link\" href=\"${image.largeImageURL}\">\n      <img\n        class=\"gallery-image\"\n        src=\"${image.webformatURL}\"\n        alt=\"${image.tags}\"\n        width='360'\n        height=\"200\"\n      />\n      <li class=\"img-info-list\">\n        <div class=\"info-item\">\n          <h2 class=\"info-title\">Likes</h2>\n          <p class=\"info-text\">${image.likes}</p>\n        </div>\n        <div class=\"info-item\">\n          <h2 class=\"info-title\">Views</h2>\n          <p class=\"info-text\">${image.views}</p>\n        </div>\n        <div class=\"info-item\">\n          <h2 class=\"info-title\">Comments</h2>\n          <p class=\"info-text\">${image.comments}</p>\n        </div>\n        <div class=\"info-item\">\n          <h2 class=\"info-title\">Downloads</h2>\n            <p class=\"info-text\">${image.downloads}</p>\n        </div>\n      </li>\n    </a>`\n        )\n        .join('\\n');\n\n    listElem.insertAdjacentHTML('beforeend', markup);\n\n    if (!lightbox) {\n        lightbox = new SimpleLightbox('.gallery a', {\n            captionsData: 'alt',\n            captionPosition: 'bottom',\n            captionDelay: 250,\n        });\n    } else {\n        lightbox.refresh();\n    }\n}\n\nexport function clearGallery() {\n    listElem.innerHTML = '';\n}\n\nexport function showLoader() {\n    loaderElem.classList.add('is-visible');\n}\nexport function hideLoader() {\n    loaderElem.classList.remove('is-visible');\n}","import iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nimport { getImagesByQuery } from './js/pixabay-api.js';\nimport {\n    createGallery,\n    clearGallery,\n    showLoader,\n    hideLoader,\n} from './js/render-functions.js';\n\nconst formElem = document.querySelector('.form');\nconst inputElem = document.querySelector('.input-text');\n\nformElem.addEventListener('submit', e => {\n    e.preventDefault();\n\n    clearGallery();\n    const query = inputElem.value.trim();\n\n    if (query === '') {\n        iziToast.error({\n            title: 'Warning',\n            message: 'Please enter a search query!',\n            position: 'topRight',\n        });\n        return;\n    }\n    inputElem.value = '';\n\n    showLoader();\n    getImagesByQuery(query)\n        .then(data => {\n            if (data.hits.length === 0) {\n                iziToast.error({\n                    title: 'Error',\n                    message:\n                        'Sorry, there are no images matching your search query. Please, try again!',\n                    position: 'topRight',\n                });\n                return;\n            }\n\n            createGallery(data.hits);\n        })\n        .catch(error => {\n            iziToast.error({\n                title: 'Error',\n                message: 'Something went wrong. Please try again later...',\n                position: 'topRight',\n            });\n        })\n        .finally(() => {\n            hideLoader();\n        });\n});"],"names":["getImagesByQuery","query","BASE_URL","END_POINT","API_KEY","params","url","axios","response","error","listElem","loaderElem","lightbox","createGallery","images","markup","image","SimpleLightbox","clearGallery","showLoader","hideLoader","formElem","inputElem","e","iziToast","data"],"mappings":"owBAEO,SAASA,EAAiBC,EAAO,CACpC,MAAMC,EAAW,sBACXC,EAAY,QACZC,EAAU,qCAEVC,EAAS,IAAI,gBAAgB,CAC/B,EAAGJ,EACH,IAAKG,EACL,WAAY,QACZ,YAAa,aACb,WAAY,MACpB,CAAK,EAEKE,EAAM,GAAGJ,CAAQ,GAAGC,CAAS,GAEnC,OAAOI,EACF,IAAID,EAAK,CAAE,OAAAD,CAAM,CAAE,EACnB,KAAKG,GAAYA,EAAS,IAAI,EAC9B,MAAMC,GAAS,CACZ,cAAQ,MAAM,mCAAoCA,EAAM,OAAO,EACzDA,CACV,CAAC,CACT,CCrBA,MAAMC,EAAW,SAAS,cAAc,UAAU,EAC5CC,EAAa,SAAS,cAAc,SAAS,EAEnD,IAAIC,EACG,SAASC,EAAcC,EAAQ,CAClC,MAAMC,EAASD,EACV,IACGE,GACI,iCAAiCA,EAAM,aAAa;AAAA;AAAA;AAAA,eAGrDA,EAAM,YAAY;AAAA,eAClBA,EAAM,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAOQA,EAAM,KAAK;AAAA;AAAA;AAAA;AAAA,iCAIXA,EAAM,KAAK;AAAA;AAAA;AAAA;AAAA,iCAIXA,EAAM,QAAQ;AAAA;AAAA;AAAA;AAAA,mCAIZA,EAAM,SAAS;AAAA;AAAA;AAAA,SAIlD,EACS,KAAK;AAAA,CAAI,EAEdN,EAAS,mBAAmB,YAAaK,CAAM,EAE1CH,EAODA,EAAS,QAAO,EANhBA,EAAW,IAAIK,EAAe,aAAc,CACxC,aAAc,MACd,gBAAiB,SACjB,aAAc,GAC1B,CAAS,CAIT,CAEO,SAASC,GAAe,CAC3BR,EAAS,UAAY,EACzB,CAEO,SAASS,GAAa,CACzBR,EAAW,UAAU,IAAI,YAAY,CACzC,CACO,SAASS,GAAa,CACzBT,EAAW,UAAU,OAAO,YAAY,CAC5C,CCpDA,MAAMU,EAAW,SAAS,cAAc,OAAO,EACzCC,EAAY,SAAS,cAAc,aAAa,EAEtDD,EAAS,iBAAiB,SAAUE,GAAK,CACrCA,EAAE,eAAc,EAEhBL,EAAY,EACZ,MAAMjB,EAAQqB,EAAU,MAAM,KAAI,EAElC,GAAIrB,IAAU,GAAI,CACduB,EAAS,MAAM,CACX,MAAO,UACP,QAAS,+BACT,SAAU,UACtB,CAAS,EACD,MACJ,CACAF,EAAU,MAAQ,GAElBH,EAAU,EACVnB,EAAiBC,CAAK,EACjB,KAAKwB,GAAQ,CACV,GAAIA,EAAK,KAAK,SAAW,EAAG,CACxBD,EAAS,MAAM,CACX,MAAO,QACP,QACI,4EACJ,SAAU,UAC9B,CAAiB,EACD,MACJ,CAEAX,EAAcY,EAAK,IAAI,CAC3B,CAAC,EACA,MAAMhB,GAAS,CACZe,EAAS,MAAM,CACX,MAAO,QACP,QAAS,kDACT,SAAU,UAC1B,CAAa,CACL,CAAC,EACA,QAAQ,IAAM,CACXJ,EAAU,CACd,CAAC,CACT,CAAC"}